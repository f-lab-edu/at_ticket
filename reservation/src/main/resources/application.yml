server:
  port: 8100

api:
  product:
    url: localhost
    port: 8000
  payment:
    url: localhost
    port: 8200

spring:
  profiles:
    include:
      - redis
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/reservation?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    generate-ddl: true
  kafka:
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      bootstrap-servers: localhost:9092
    consumer:
      properties:
        spring:
          deserializer:
            value:
              delegate:
                class: org.springframework.kafka.support.serializer.JsonDeserializer
          json:
            trusted:
              packages: '*'
      group-id: myGroup
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      bootstrap-servers: localhost:9092
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer



jwt-secret-key: ${JWT_SECRET_KEY}

management:
  endpoints:
    web:
      exposure:
        include: prometheus
