version: "3.9"
services:
  database:
    image: mysql:8.0.21
    container_name: mysql
    #DB시작 시 초기화 스크립트 실행
    volumes:
      - ./mysql-init-files/:/docker-entrypoint-initdb.d/
      - db_volume:/var/lib/mysql
    ports:
      - "3306:3306"
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10

  redis:
    image: redis:latest
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - /path/to/local/dаta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=6379
      - REDIS_DATABASES=16

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"


  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    depends_on:
      - zookeeper
    environment:
      JVM_OPTS: -Xmx1g -Xms1g -XX:MaxPermSize=1024m
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_LISTENERS: INSIDE://kafka:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092

  product:
    #DB가 실행되기 전까진 어플리케이션이 실행되지 않도록 설정
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./product/Dockerfile
    container_name: at_ticket-product
    ports:
      - "8000:8000"
    environment:
      - SPRING_PROFILES_ACTIVE=dev


  reservation:
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./reservation/Dockerfile
    container_name: at_ticket-reservation
    ports:
      - "8100:8100"
    environment:
      - SPRING_PROFILES_ACTIVE=dev


  payment:
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./payment/Dockerfile
    container_name: at_ticket-payment
    ports:
      - "8200:8200"
    environment:
      - SPRING_PROFILES_ACTIVE=dev

  kafka-app:
    build:
      context: .
      dockerfile: ./kafka/Dockerfile
    container_name: at_ticket-kafka-app
    ports:
      - "9200:9200"
    depends_on:
      - kafka
      - zookeeper
    environment:
      - SPRING_PROFILES_ACTIVE=dev

  #
  user:
    #DB가 실행되기 전까진 어플리케이션이 실행되지 않도록 설정
    depends_on:
      database:
        condition: service_healthy
    build:
      context: .
      dockerfile: ./user/Dockerfile
    container_name: at_ticket-user
    ports:
      - "9000:9000"

volumes:
  db_volume:
